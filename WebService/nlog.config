<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Warn"
      internalLogFile="c:\Timberyard-service\timberyard-internal-nlog.txt">

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>

	<variable name="logDirectory" value="C:\Timberyard-service\Logs\"/>

	<!-- the targets to write to -->
	<targets>
		<!-- write logs to file  -->

		<target xsi:type="File" name="FileLogger" fileName="${logDirectory}/${shortdate}.log"
		        layout="${longdate} ${event-properties:item=threadId} ${uppercase:${level}} ${logger} [Method=${event-properties:item=methodName}| Message=${event-properties:item=message} |Exception=${exception:format=tostring}]"
		        maxArchiveFiles="1000" archiveNumbering="Sequence" archiveAboveSize="104857600" archiveFileName="${logDirectory}/ArchiveLogs/{#######}.a" />
		<!-- another file log, only own logs. Uses some ASP.NET core renderers -->
		<target xsi:type="File" name="AspNetCore" fileName="${logDirectory}${shortdate}.log"
		        layout="${longdate} ${event-properties:item=EventId_Id} ${uppercase:${level}} ${logger} [Message=${message}| Exception=${exception:format=tostring}| Url=${aspnet-request-url}| Action=${aspnet-mvc-action}]" />
		<!--Console logger for logging in docker-->
		<target xsi:type="ColoredConsole" name="LoggerColoredConsoleLogger"
		        layout="${longdate} ${event-properties:item=threadId} ${uppercase:${level}}| Message=${event-properties:item=message} |Exception=${exception:format=tostring}]"
		        detectConsoleAvailable="true">
			<highlight-row backgroundColor="DarkRed" condition="level == LogLevel.Fatal"></highlight-row>
			<highlight-row backgroundColor="Red" foregroundColor="Black" condition="level == LogLevel.Error"></highlight-row>
			<highlight-row backgroundColor="Yellow" foregroundColor="Black" condition="level == LogLevel.Warn"></highlight-row>
			<highlight-row backgroundColor="White" foregroundColor="Black" condition="level == LogLevel.Info"></highlight-row>
			<highlight-row backgroundColor="Gray" foregroundColor="Black" condition="level == LogLevel.Debug"></highlight-row>
		</target>

	</targets>


	<!-- rules to map from logger name to target -->
	<rules>
		<!--All logs, including from Microsoft-->

		<logger name="Timberyard-service" minlevel="Debug" writeTo="FileLogger,LoggerColoredConsoleLogger" final="true"/>
		<logger name="Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionManager" minlevel="Debug" writeTo="AspNetCore" final="true"/>
		<logger name="Microsoft.AspNetCore.SignalR" minlevel="Info" writeTo="AspNetCore" final="true"/>
		<logger name="Microsoft.AspNetCore.*" minlevel="Info" writeTo="AspNetCore" final="true"/>-->
		<!--Skip non-critical Microsoft logs and so log only own logs-->
		<logger name="Microsoft.*" maxLevel="Info" final="true" />
	</rules>
</nlog>
